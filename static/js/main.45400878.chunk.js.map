{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","theme.ts","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","x","time_close","y","open","toFixed","high","low","close","options","chart","xaxis","yaxis","show","comeupAnimation","keyframes","Overview","main","Tag","h3","Value","Text","props","isPositive","checkValue","value","Price","tickersData","useState","setData","loading","setLoading","useEffect","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Title","h1","theme","accentColor","Loader","span","Header","header","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Home","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","darkTheme","bgColor","cardBgColor","lightTheme","Atom","atom","key","default","CoinsList","ul","li","Img","img","Coins","setLightDarkMode","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","App","mode","useRecoilValue","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.45400878.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 * 24 * 7 * 4;\r\n    return fetch(\r\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n    ).then((response) => response.json());\r\n  }","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlc\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        \"Loading Chart ...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => ({\r\n                x: price.time_close,\r\n                y: [\r\n                  price.open.toFixed(2),\r\n                  price.high.toFixed(2),\r\n                  price.low.toFixed(2),\r\n                  price.close.toFixed(2),\r\n                ],\r\n              })),\r\n            },\r\n          ]}\r\n          options={{\r\n            chart: {\r\n              type: 'candlestick',\r\n            },\r\n            xaxis: {\r\n                type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n                show: false,\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chart;","import { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst comeupAnimation = keyframes`\r\n  0% {\r\n    transform: none;\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Overview = styled.main`\r\n  width: 77%;\r\n  height: 15px;\r\n  background-color: whitesmoke;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  margin: 5px 0;\r\n  padding: 25px;\r\n  opacity: 0;\r\n  animation: ${comeupAnimation} 0.5s linear forwards;\r\n`;\r\n\r\nconst Tag = styled.h3`\r\n  width: 50%;\r\n  color: black;\r\n  font-size: 12px;\r\n  font-weight: 800;\r\n`;\r\n\r\nconst Value = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst Text = styled.h3<{ isPositive?: Boolean }>`\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n  color: ${(props) => (props.isPositive ? \"lightgreen\" : \"red\")};\r\n`;\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\ninterface PriceProps {\r\n  coinId: string;\r\n  tickersData?: PriceData;\r\n}\r\nfunction checkValue(value: number | undefined) {\r\n  if (value) {\r\n    return value > 0;\r\n  }\r\n}\r\nfunction Price({ coinId, tickersData }: PriceProps) {\r\n  const [data, setData] = useState<PriceData>();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setData(tickersData);\r\n    setLoading(false);\r\n  }, [coinId, tickersData]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        \"Loading Price...\"\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <Tag>Price :</Tag>\r\n            <Value>\r\n              <Text isPositive={true}>\r\n                $ {data?.quotes.USD.price.toFixed(3)}\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n          <Overview>\r\n            <Tag> 최대변화률(최근 24h):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.market_cap_change_24h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.market_cap_change_24h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> 변화율(최근 30m):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_30m) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_30m} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> 변화율(최근 1h):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_1h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_1h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> 변화율(최근 12h):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_12h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_12h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n\r\n          <Overview>\r\n            <Tag> 변화율(최근 24h):</Tag>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  checkValue(data?.quotes.USD.percent_change_24h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_24h} %\r\n              </Text>\r\n            </Value>\r\n          </Overview>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Home = styled.div`\r\n  border-radius: 5px;\r\n  height : 25px;\r\n  margin: 10px 30px 10px 10px;\r\n  background-color: black;\r\n  color: white;\r\n`;\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Home>\r\n          <Link to=\"/\">Home</Link>\r\n        </Home>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n            <Price coinId={coinId} tickersData={tickersData} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;","import { DefaultTheme } from \"styled-components\";\r\nimport { atom } from \"recoil\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"gray\",\r\n  accentColor: \"yellow\",\r\n  cardBgColor: \"black\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"lightgray\",\r\n  textColor: \"black\",\r\n  accentColor: \"orange\",\r\n  cardBgColor: \"white\",\r\n};\r\n\r\nexport const Atom = atom({\r\n  key: \"isDark\",\r\n  default: true,\r\n});","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n// import { RecoilRoot } from \"recoil\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { Atom } from \"../theme\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  \r\n  const setLightDarkMode = useSetRecoilState(Atom);\r\n  const toggleMode = () => setLightDarkMode((prev) => !prev);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인 List</Title>\r\n \r\n          <button onClick={toggleMode}> Light/Dark</button>\r\n\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;","import Router from \"./Router\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { Atom } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n*{\r\n  box-sizing: border-box;\r\n}\r\na{\r\n  text-decoration: none;\r\n  color:inherit;\r\n}\r\nbody{\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  font-weight: 700;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  const mode = useRecoilValue(Atom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={mode ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}